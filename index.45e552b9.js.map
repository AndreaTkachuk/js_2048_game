{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ class $a5fd07fa01589658$var$Game {\n    /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ constructor(initialState){\n        // eslint-disable-next-line no-console\n        console.log(initialState);\n    }\n    moveLeft() {}\n    moveRight() {}\n    moveUp() {}\n    moveDown() {}\n    /**\n   * @returns {number}\n   */ getScore() {}\n    /**\n   * @returns {number[][]}\n   */ getState() {}\n    /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ getStatus() {}\n    /**\n   * Starts the game.\n   */ start() {}\n    /**\n   * Resets the game.\n   */ restart() {}\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$button = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$mesStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$mesWin = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$mesLose = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$cells = document.querySelectorAll(\".field-cell\");\nlet $09e991522ca7e64e$var$statusGame = \"idle\";\nlet $09e991522ca7e64e$var$scoreValue = 0;\nconst $09e991522ca7e64e$var$initialState = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nlet $09e991522ca7e64e$var$gameArr = [];\n$09e991522ca7e64e$var$button.addEventListener(\"click\", (e)=>{\n    if ($09e991522ca7e64e$var$button.classList.contains(\"start\")) $09e991522ca7e64e$var$game.start();\n    else $09e991522ca7e64e$var$game.restart();\n});\n$09e991522ca7e64e$var$game.getScore = ()=>{\n    return $09e991522ca7e64e$var$score.textContent;\n};\n$09e991522ca7e64e$var$game.getState = ()=>{\n    return $09e991522ca7e64e$var$gameArr;\n};\n$09e991522ca7e64e$var$game.getStatus = ()=>{\n    return $09e991522ca7e64e$var$statusGame;\n};\n$09e991522ca7e64e$var$game.start = function() {\n    $09e991522ca7e64e$var$button.classList.replace(\"start\", \"restart\");\n    $09e991522ca7e64e$var$button.textContent = \"Restart\";\n    if (!$09e991522ca7e64e$var$mesStart.className.includes(\"hidden\")) $09e991522ca7e64e$var$mesStart.classList.add(\"hidden\");\n    if (!$09e991522ca7e64e$var$mesWin.className.includes(\"hidden\")) $09e991522ca7e64e$var$mesWin.classList.add(\"hidden\");\n    if (!$09e991522ca7e64e$var$mesLose.className.includes(\"hidden\")) $09e991522ca7e64e$var$mesLose.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$statusGame = \"playing\";\n    $09e991522ca7e64e$var$gameArr = structuredClone($09e991522ca7e64e$var$initialState);\n    $09e991522ca7e64e$var$score.textContent = 0;\n    for(let i = 0; i < 2; i++){\n        const row = Math.floor(Math.random() * 4);\n        $09e991522ca7e64e$var$pushValue($09e991522ca7e64e$var$gameArr[row]);\n    }\n    $09e991522ca7e64e$var$update();\n};\n$09e991522ca7e64e$var$game.restart = ()=>{\n    $09e991522ca7e64e$var$button.classList.replace(\"restart\", \"start\");\n    $09e991522ca7e64e$var$button.textContent = \"Start\";\n    $09e991522ca7e64e$var$mesStart.classList.remove(\"hidden\");\n    if (!$09e991522ca7e64e$var$mesWin.className.includes(\"hidden\")) $09e991522ca7e64e$var$mesWin.classList.add(\"hidden\");\n    if (!$09e991522ca7e64e$var$mesLose.className.includes(\"hidden\")) $09e991522ca7e64e$var$mesLose.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$score.textContent = 0;\n    $09e991522ca7e64e$var$statusGame = \"idle\";\n    $09e991522ca7e64e$var$gameArr = structuredClone($09e991522ca7e64e$var$initialState);\n    $09e991522ca7e64e$var$update();\n};\n$09e991522ca7e64e$var$game.moveLeft = function() {\n    let testArr = structuredClone($09e991522ca7e64e$var$gameArr);\n    $09e991522ca7e64e$var$gameArr.forEach((item)=>$09e991522ca7e64e$var$arrLeft(item));\n    if (!$09e991522ca7e64e$var$compareArrays(testArr, $09e991522ca7e64e$var$gameArr)) $09e991522ca7e64e$var$pushToDoubleArr($09e991522ca7e64e$var$gameArr);\n    testArr = null;\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$scoreValue;\n    $09e991522ca7e64e$var$update();\n};\n$09e991522ca7e64e$var$game.moveRight = function() {\n    let testArr = structuredClone($09e991522ca7e64e$var$gameArr);\n    $09e991522ca7e64e$var$gameArr.forEach((item)=>$09e991522ca7e64e$var$arrRight(item));\n    if (!$09e991522ca7e64e$var$compareArrays(testArr, $09e991522ca7e64e$var$gameArr)) $09e991522ca7e64e$var$pushToDoubleArr($09e991522ca7e64e$var$gameArr);\n    testArr = null;\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$scoreValue;\n    $09e991522ca7e64e$var$update();\n};\n$09e991522ca7e64e$var$game.moveUp = function() {\n    let newArray = $09e991522ca7e64e$var$helperUp($09e991522ca7e64e$var$gameArr);\n    let testArr = structuredClone($09e991522ca7e64e$var$gameArr);\n    $09e991522ca7e64e$var$gameArr = structuredClone(newArray);\n    newArray = null;\n    if (!$09e991522ca7e64e$var$compareArrays(testArr, $09e991522ca7e64e$var$gameArr)) $09e991522ca7e64e$var$pushToDoubleArr($09e991522ca7e64e$var$gameArr);\n    testArr = null;\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$scoreValue;\n    $09e991522ca7e64e$var$update();\n};\n$09e991522ca7e64e$var$game.moveDown = function() {\n    let newArray = $09e991522ca7e64e$var$helperDown($09e991522ca7e64e$var$gameArr);\n    let testArr = structuredClone($09e991522ca7e64e$var$gameArr);\n    $09e991522ca7e64e$var$gameArr = structuredClone(newArray);\n    newArray = null;\n    if (!$09e991522ca7e64e$var$compareArrays(testArr, $09e991522ca7e64e$var$gameArr)) $09e991522ca7e64e$var$pushToDoubleArr($09e991522ca7e64e$var$gameArr);\n    testArr = null;\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$scoreValue;\n    $09e991522ca7e64e$var$update();\n};\ndocument.addEventListener(\"keydown\", (ev)=>{\n    if (ev.key === \"ArrowLeft\") $09e991522ca7e64e$var$game.moveLeft();\n    if (ev.key === \"ArrowRight\") $09e991522ca7e64e$var$game.moveRight();\n    if (ev.key === \"ArrowUp\") $09e991522ca7e64e$var$game.moveUp();\n    if (ev.key === \"ArrowDown\") $09e991522ca7e64e$var$game.moveDown();\n});\n//  -----------helps functions----------\nfunction $09e991522ca7e64e$var$pushValue(arr) {\n    if (arr.includes(0)) {\n        const freeFields = arr.map((value, index)=>value === 0 ? index : null).filter((index)=>index !== null);\n        const randomIndex = freeFields[Math.floor(Math.random() * freeFields.length)];\n        arr[randomIndex] = Math.random() <= 0.1 ? 4 : 2;\n    } else return \"message-lose\";\n}\nfunction $09e991522ca7e64e$var$helperUp(arr) {\n    const newArr = [];\n    const resArr = [];\n    for(let i = 0; i < 4; i++){\n        const subArr = [];\n        for(let j = 0; j < 4; j++)subArr.push(arr[j][i]);\n        newArr.push(subArr);\n    }\n    newArr.forEach((item)=>$09e991522ca7e64e$var$arrLeft(item));\n    for(let i = 0; i < 4; i++){\n        const subArr = [];\n        for(let j = 0; j < 4; j++)subArr.push(newArr[j][i]);\n        resArr.push(subArr);\n    }\n    return resArr;\n}\nfunction $09e991522ca7e64e$var$helperDown(arr) {\n    const newArr = [];\n    const resArr = [];\n    for(let i = 0; i < 4; i++){\n        const subArr = [];\n        for(let j = 0; j < 4; j++)subArr.push(arr[j][i]);\n        newArr.push(subArr);\n    }\n    newArr.forEach((item)=>$09e991522ca7e64e$var$arrRight(item));\n    for(let i = 0; i < 4; i++){\n        const subArr = [];\n        for(let j = 0; j < 4; j++)subArr.push(newArr[j][i]);\n        resArr.push(subArr);\n    }\n    return resArr;\n}\nfunction $09e991522ca7e64e$var$arrLeft(el) {\n    for(let i = el.length - 2; i >= 0; i--){\n        if (el[i] === 0 && el[i + 1] !== 0) [el[i], el[i + 1]] = [\n            el[i + 1],\n            el[i]\n        ];\n        if (el[i] !== 0 && el[i + 1] === el[i]) {\n            if (el[i - 1] === 0) [el[i - 1], el[i + 1]] = [\n                el[i + 1],\n                el[i - 1]\n            ];\n        }\n    }\n    for(let i = 0; i < el.length - 1; i++){\n        if (el[i] === 0 && i + 2 < el.length) [el[i], el[i + 1], el[i + 2]] = [\n            el[i + 1],\n            el[i + 2],\n            0\n        ];\n        if (el[i] !== 0 && el[i + 1] === el[i]) {\n            [el[i], el[i + 1]] = [\n                el[i + 1] + el[i],\n                0\n            ];\n            $09e991522ca7e64e$var$scoreValue += el[i];\n        }\n    }\n    for(let i = el.length - 2; i >= 0; i--){\n        if (el[i] === 0 && el[i + 1] !== 0) [el[i], el[i + 1]] = [\n            el[i + 1],\n            el[i]\n        ];\n        if (el[i] !== 0 && el[i + 1] === el[i]) {\n            if (el[i - 1] === 0) [el[i - 1], el[i + 1]] = [\n                el[i + 1],\n                el[i - 1]\n            ];\n        }\n    }\n    return el;\n}\nfunction $09e991522ca7e64e$var$arrRight(el) {\n    // const testArr = [...el];\n    for(let i = 1; i < el.length; i++){\n        if (el[i] === 0 && el[i - 1] !== 0) [el[i], el[i - 1]] = [\n            el[i - 1],\n            el[i]\n        ];\n        if (el[i] !== 0 && el[i - 1] === el[i]) {\n            if (el[i + 1] === 0) [el[i + 1], el[i - 1]] = [\n                el[i - 1],\n                el[i + 1]\n            ];\n        }\n    }\n    for(let i = el.length - 1; i >= 0; i--){\n        if (el[i] === 0 && i - 2 > 0) [el[i], el[i - 1], el[i - 2]] = [\n            el[i - 1],\n            el[i - 2],\n            0\n        ];\n        if (el[i] !== 0 && el[i - 1] === el[i]) {\n            [el[i], el[i - 1]] = [\n                el[i - 1] + el[i],\n                0\n            ];\n            $09e991522ca7e64e$var$scoreValue += el[i];\n        }\n    }\n    for(let i = 1; i < el.length; i++){\n        if (el[i] === 0 && el[i - 1] !== 0) [el[i], el[i - 1]] = [\n            el[i - 1],\n            el[i]\n        ];\n        if (el[i] !== 0 && el[i - 1] === el[i]) {\n            if (el[i + 1] === 0) [el[i + 1], el[i - 1]] = [\n                el[i - 1],\n                el[i + 1]\n            ];\n        }\n    }\n}\nfunction $09e991522ca7e64e$var$update() {\n    const arr = [];\n    $09e991522ca7e64e$var$cells.forEach((el)=>el.className = \"field-cell\");\n    for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)arr.push($09e991522ca7e64e$var$gameArr[i][j]);\n    if (arr.includes(2048)) $09e991522ca7e64e$var$mesWin.classList.remove(\"hidden\");\n    for(let i = 0; i < arr.length; i++){\n        if (arr[i] !== 0) $09e991522ca7e64e$var$cells[i].textContent = arr[i];\n        if (arr[i] === 0) $09e991522ca7e64e$var$cells[i].textContent = \"\";\n    }\n    $09e991522ca7e64e$var$cells.forEach((element)=>{\n        if (element.textContent > 0) element.classList.add(`field-cell--${element.textContent}`);\n    });\n    const checkCellsArr = [];\n    let noMoves = false;\n    for(let i = 0; i < 4; i++){\n        const subArr = [];\n        for(let j = 0; j < 4; j++)subArr.push($09e991522ca7e64e$var$gameArr[j][i]);\n        checkCellsArr.push(subArr);\n    }\n    for(let i = 0; i < 4; i++){\n        for(let j = 0; j < 3; j++)if (!$09e991522ca7e64e$var$gameArr[i].includes(0) && $09e991522ca7e64e$var$gameArr[i][j] === $09e991522ca7e64e$var$gameArr[i][j + 1]) noMoves = true;\n        if ($09e991522ca7e64e$var$gameArr[i].includes(0)) noMoves = true;\n    }\n    for(let i = 0; i < 4; i++){\n        for(let j = 0; j < 3; j++)if (!checkCellsArr[i].includes(0) && checkCellsArr[i][j] === checkCellsArr[i][j + 1]) noMoves = true;\n    }\n    if (!noMoves) $09e991522ca7e64e$var$mesLose.classList.remove(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$pushToDoubleArr(arr) {\n    const newArr = [];\n    for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)newArr.push(arr[i][j]);\n    if (newArr.includes(0)) $09e991522ca7e64e$var$pushValue(newArr);\n    else $09e991522ca7e64e$var$mesLose.classList.remove(\"hidden\");\n    let count = 0;\n    for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n        arr[i][j] = newArr[count];\n        count++;\n    }\n    return arr;\n}\nfunction $09e991522ca7e64e$var$compareArrays(arr1, arr2) {\n    const arr1inLine = [];\n    const arr2inLine = [];\n    for(let i = 0; i < arr1.length; i++)for(let j = 0; j < arr1.length; j++){\n        arr1inLine.push(arr1[i][j]);\n        arr2inLine.push(arr2[i][j]);\n    }\n    for(let i = 0; i < arr1inLine.length; i++){\n        if (arr1inLine[i] !== arr2inLine[i]) return false;\n    }\n    return true;\n}\n\n\n//# sourceMappingURL=index.45e552b9.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.button');\nconst mesStart = document.querySelector('.message-start');\nconst mesWin = document.querySelector('.message-win');\nconst mesLose = document.querySelector('.message-lose');\nconst score = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('.field-cell');\nlet statusGame = 'idle';\nlet scoreValue = 0;\nconst initialState = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet gameArr = [\n  // [0, 0, 0, 0],\n  // [0, 0, 0, 0],\n  // [0, 0, 0, 0],\n  // [0, 0, 0, 0],\n];\n\nbutton.addEventListener('click', (e) => {\n  if (button.classList.contains('start')) {\n    game.start();\n  } else {\n    game.restart();\n  }\n});\n\ngame.getScore = () => {\n  return score.textContent;\n};\n\ngame.getState = () => {\n  return gameArr;\n};\n\ngame.getStatus = () => {\n  return statusGame;\n};\n\ngame.start = function () {\n  button.classList.replace('start', 'restart');\n  button.textContent = 'Restart';\n\n  if (!mesStart.className.includes('hidden')) {\n    mesStart.classList.add('hidden');\n  }\n\n  if (!mesWin.className.includes('hidden')) {\n    mesWin.classList.add('hidden');\n  }\n\n  if (!mesLose.className.includes('hidden')) {\n    mesLose.classList.add('hidden');\n  }\n  statusGame = 'playing';\n  gameArr = structuredClone(initialState);\n  score.textContent = 0;\n\n  for (let i = 0; i < 2; i++) {\n    const row = Math.floor(Math.random() * 4);\n\n    pushValue(gameArr[row]);\n  }\n  update();\n};\n\ngame.restart = () => {\n  button.classList.replace('restart', 'start');\n  button.textContent = 'Start';\n  mesStart.classList.remove('hidden');\n\n  if (!mesWin.className.includes('hidden')) {\n    mesWin.classList.add('hidden');\n  }\n\n  if (!mesLose.className.includes('hidden')) {\n    mesLose.classList.add('hidden');\n  }\n  score.textContent = 0;\n  statusGame = 'idle';\n  gameArr = structuredClone(initialState);\n  update();\n};\n\ngame.moveLeft = function () {\n  let testArr = structuredClone(gameArr);\n\n  gameArr.forEach((item) => arrLeft(item));\n\n  if (!compareArrays(testArr, gameArr)) {\n    pushToDoubleArr(gameArr);\n  }\n  testArr = null;\n  score.textContent = scoreValue;\n  update();\n};\n\ngame.moveRight = function () {\n  let testArr = structuredClone(gameArr);\n\n  gameArr.forEach((item) => arrRight(item));\n\n  if (!compareArrays(testArr, gameArr)) {\n    pushToDoubleArr(gameArr);\n  }\n  testArr = null;\n  score.textContent = scoreValue;\n  update();\n};\n\ngame.moveUp = function () {\n  let newArray = helperUp(gameArr);\n  let testArr = structuredClone(gameArr);\n\n  gameArr = structuredClone(newArray);\n  newArray = null;\n\n  if (!compareArrays(testArr, gameArr)) {\n    pushToDoubleArr(gameArr);\n  }\n  testArr = null;\n  score.textContent = scoreValue;\n  update();\n};\n\ngame.moveDown = function () {\n  let newArray = helperDown(gameArr);\n  let testArr = structuredClone(gameArr);\n\n  gameArr = structuredClone(newArray);\n  newArray = null;\n\n  if (!compareArrays(testArr, gameArr)) {\n    pushToDoubleArr(gameArr);\n  }\n  testArr = null;\n  score.textContent = scoreValue;\n  update();\n};\n\ndocument.addEventListener('keydown', (ev) => {\n  if (ev.key === 'ArrowLeft') {\n    game.moveLeft();\n  }\n\n  if (ev.key === 'ArrowRight') {\n    game.moveRight();\n  }\n\n  if (ev.key === 'ArrowUp') {\n    game.moveUp();\n  }\n\n  if (ev.key === 'ArrowDown') {\n    game.moveDown();\n  }\n});\n\n//  -----------helps functions----------\n\nfunction pushValue(arr) {\n  if (arr.includes(0)) {\n    const freeFields = arr\n      .map((value, index) => (value === 0 ? index : null))\n      .filter((index) => index !== null);\n\n    const randomIndex =\n      freeFields[Math.floor(Math.random() * freeFields.length)];\n\n    arr[randomIndex] = Math.random() <= 0.1 ? 4 : 2;\n  } else {\n    return 'message-lose';\n  }\n}\n\nfunction helperUp(arr) {\n  const newArr = [];\n  const resArr = [];\n\n  for (let i = 0; i < 4; i++) {\n    const subArr = [];\n\n    for (let j = 0; j < 4; j++) {\n      subArr.push(arr[j][i]);\n    }\n    newArr.push(subArr);\n  }\n  newArr.forEach((item) => arrLeft(item));\n\n  for (let i = 0; i < 4; i++) {\n    const subArr = [];\n\n    for (let j = 0; j < 4; j++) {\n      subArr.push(newArr[j][i]);\n    }\n    resArr.push(subArr);\n  }\n\n  return resArr;\n}\n\nfunction helperDown(arr) {\n  const newArr = [];\n  const resArr = [];\n\n  for (let i = 0; i < 4; i++) {\n    const subArr = [];\n\n    for (let j = 0; j < 4; j++) {\n      subArr.push(arr[j][i]);\n    }\n    newArr.push(subArr);\n  }\n  newArr.forEach((item) => arrRight(item));\n\n  for (let i = 0; i < 4; i++) {\n    const subArr = [];\n\n    for (let j = 0; j < 4; j++) {\n      subArr.push(newArr[j][i]);\n    }\n    resArr.push(subArr);\n  }\n\n  return resArr;\n}\n\nfunction arrLeft(el) {\n  for (let i = el.length - 2; i >= 0; i--) {\n    if (el[i] === 0 && el[i + 1] !== 0) {\n      [el[i], el[i + 1]] = [el[i + 1], el[i]];\n    }\n\n    if (el[i] !== 0 && el[i + 1] === el[i]) {\n      if (el[i - 1] === 0) {\n        [el[i - 1], el[i + 1]] = [el[i + 1], el[i - 1]];\n      }\n    }\n  }\n\n  for (let i = 0; i < el.length - 1; i++) {\n    if (el[i] === 0 && i + 2 < el.length) {\n      [el[i], el[i + 1], el[i + 2]] = [el[i + 1], el[i + 2], 0];\n    }\n\n    if (el[i] !== 0 && el[i + 1] === el[i]) {\n      [el[i], el[i + 1]] = [el[i + 1] + el[i], 0];\n      scoreValue += el[i];\n    }\n  }\n\n  for (let i = el.length - 2; i >= 0; i--) {\n    if (el[i] === 0 && el[i + 1] !== 0) {\n      [el[i], el[i + 1]] = [el[i + 1], el[i]];\n    }\n\n    if (el[i] !== 0 && el[i + 1] === el[i]) {\n      if (el[i - 1] === 0) {\n        [el[i - 1], el[i + 1]] = [el[i + 1], el[i - 1]];\n      }\n    }\n  }\n\n  return el;\n}\n\nfunction arrRight(el) {\n  // const testArr = [...el];\n\n  for (let i = 1; i < el.length; i++) {\n    if (el[i] === 0 && el[i - 1] !== 0) {\n      [el[i], el[i - 1]] = [el[i - 1], el[i]];\n    }\n\n    if (el[i] !== 0 && el[i - 1] === el[i]) {\n      if (el[i + 1] === 0) {\n        [el[i + 1], el[i - 1]] = [el[i - 1], el[i + 1]];\n      }\n    }\n  }\n\n  for (let i = el.length - 1; i >= 0; i--) {\n    if (el[i] === 0 && i - 2 > 0) {\n      [el[i], el[i - 1], el[i - 2]] = [el[i - 1], el[i - 2], 0];\n    }\n\n    if (el[i] !== 0 && el[i - 1] === el[i]) {\n      [el[i], el[i - 1]] = [el[i - 1] + el[i], 0];\n      scoreValue += el[i];\n    }\n  }\n\n  for (let i = 1; i < el.length; i++) {\n    if (el[i] === 0 && el[i - 1] !== 0) {\n      [el[i], el[i - 1]] = [el[i - 1], el[i]];\n    }\n\n    if (el[i] !== 0 && el[i - 1] === el[i]) {\n      if (el[i + 1] === 0) {\n        [el[i + 1], el[i - 1]] = [el[i - 1], el[i + 1]];\n      }\n    }\n  }\n}\n\nfunction update() {\n  const arr = [];\n\n  cells.forEach((el) => (el.className = 'field-cell'));\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      arr.push(gameArr[i][j]);\n    }\n  }\n\n  if (arr.includes(2048)) {\n    mesWin.classList.remove('hidden');\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== 0) {\n      cells[i].textContent = arr[i];\n    }\n\n    if (arr[i] === 0) {\n      cells[i].textContent = '';\n    }\n  }\n\n  cells.forEach((element) => {\n    if (element.textContent > 0) {\n      element.classList.add(`field-cell--${element.textContent}`);\n    }\n  });\n\n  const checkCellsArr = [];\n  let noMoves = false;\n\n  for (let i = 0; i < 4; i++) {\n    const subArr = [];\n\n    for (let j = 0; j < 4; j++) {\n      subArr.push(gameArr[j][i]);\n    }\n    checkCellsArr.push(subArr);\n  }\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (!gameArr[i].includes(0) && gameArr[i][j] === gameArr[i][j + 1]) {\n        noMoves = true;\n      }\n    }\n\n    if (gameArr[i].includes(0)) {\n      noMoves = true;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (\n        !checkCellsArr[i].includes(0) &&\n        checkCellsArr[i][j] === checkCellsArr[i][j + 1]\n      ) {\n        noMoves = true;\n      }\n    }\n  }\n\n  if (!noMoves) {\n    mesLose.classList.remove('hidden');\n  }\n}\n\nfunction pushToDoubleArr(arr) {\n  const newArr = [];\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      newArr.push(arr[i][j]);\n    }\n  }\n\n  if (newArr.includes(0)) {\n    pushValue(newArr);\n  } else {\n    mesLose.classList.remove('hidden');\n  }\n\n  let count = 0;\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      arr[i][j] = newArr[count];\n      count++;\n    }\n  }\n\n  return arr;\n}\n\nfunction compareArrays(arr1, arr2) {\n  const arr1inLine = [];\n  const arr2inLine = [];\n\n  for (let i = 0; i < arr1.length; i++) {\n    for (let j = 0; j < arr1.length; j++) {\n      arr1inLine.push(arr1[i][j]);\n      arr2inLine.push(arr2[i][j]);\n    }\n  }\n\n  for (let i = 0; i < arr1inLine.length; i++) {\n    if (arr1inLine[i] !== arr2inLine[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    // eslint-disable-next-line no-console\n    console.log(initialState);\n  }\n\n  moveLeft() {}\n  moveRight() {}\n  moveUp() {}\n  moveDown() {}\n\n  /**\n   * @returns {number}\n   */\n  getScore() {}\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {}\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {}\n\n  /**\n   * Starts the game.\n   */\n  start() {}\n\n  /**\n   * Resets the game.\n   */\n  restart() {}\n\n  // Add your own methods here\n}\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$game","constructor","initialState","console","log","moveLeft","moveRight","moveUp","moveDown","getScore","getState","getStatus","start","restart","$09e991522ca7e64e$var$button","document","querySelector","$09e991522ca7e64e$var$mesStart","$09e991522ca7e64e$var$mesWin","$09e991522ca7e64e$var$mesLose","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$cells","querySelectorAll","$09e991522ca7e64e$var$statusGame","$09e991522ca7e64e$var$scoreValue","$09e991522ca7e64e$var$initialState","$09e991522ca7e64e$var$gameArr","$09e991522ca7e64e$var$pushValue","arr","includes","freeFields","map","value","index","filter","Math","floor","random","length","$09e991522ca7e64e$var$arrLeft","el","i","$09e991522ca7e64e$var$arrRight","$09e991522ca7e64e$var$update","forEach","className","j","push","classList","remove","textContent","element","add","checkCellsArr","noMoves","subArr","$09e991522ca7e64e$var$pushToDoubleArr","newArr","count","$09e991522ca7e64e$var$compareArrays","arr1","arr2","arr1inLine","arr2inLine","addEventListener","e","contains","replace","structuredClone","testArr","item","newArray","$09e991522ca7e64e$var$helperUp","resArr","$09e991522ca7e64e$var$helperDown","ev","key"],"version":3,"file":"index.45e552b9.js.map"}